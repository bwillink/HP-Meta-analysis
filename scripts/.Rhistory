data = dat_1,
method = "REML"
)
summary(Q1m5)
forest.default(x= Q1m5$beta, sei =  Q1m5$se, ci.lb =  Q1m5$ci.lb, ci.ub =  Q1m5$ci.ub,
annotate=TRUE, showweights=T, header=F,
slab = c("Invertebrate infected", "Invertebrate uninfected", "Vertebrate infected", "Vertebrate  uninfected"))
Q1m6 <-
rma.mv(
g ~ Trait.category:Gradient.category:Host.type.2 -1,
V = varcovmat_1_PD$mat,
random = list( ~ 1 | ID, ~ 1 | Experiment, ~ 1 | Parasite),
data = dat_1,
method = "REML"
)
summary(Q1m6)
forest.default(x= Q1m6$beta, sei =  Q1m6$se, ci.lb =  Q1m6$ci.lb, ci.ub =  Q1m6$ci.ub,
annotate=TRUE, showweights=T, header=F,
slab = c("Environment invertebrate infected", "Environment invertebrate uninfected", "Pollution invertebrate infected", "Pollution invertebrate uninfected", "Resource invertebrate infected", "Resource invertebrate uninfected", "Environment vertebrate infected", "Environment vertebrate uninfected", "Pollution vertebrate infected", "Pollution vertebrate uninfected", "Resource vertebrate infected", "Resource vertebrate uninfected"))
Q1m7 <-
rma.mv(
g ~ Trait.type:Gradient.category:Host.type.2 -1,
V = varcovmat_1_PD$mat,
random = list( ~ 1 | ID, ~ 1 | Experiment, ~ 1 | Parasite),
data = dat_1,
method = "REML"
)
summary(Q1m7)
forest.default(x= Q1m7$beta, sei =  Q1m7$se, ci.lb =  Q1m7$ci.lb, ci.ub =  Q1m7$ci.ub,
annotate=TRUE, showweights=T, header=F,
slab = c("Environment invertebrate fecundity", "Environment invertebrate survivorship", "Pollution invertebrate fecundity", "Pollution invertebrate survivorship", "Resource invertebrate fecundity", "Resource invertebrate survivorship", "Environment vertebrate survivorship", "Pollution vertebrate survivorship", "Resource vertebrate survivorship"))
Q1m7 <-
rma.mv(
g ~ Gradient.category:Host.type.2 -1,
V = varcovmat_1_PD$mat,
random = list( ~ 1 | ID, ~ 1 | Experiment, ~ 1 | Parasite),
data = dat_1,
method = "REML"
)
summary(Q1m7)
forest.default(x= Q1m7$beta, sei =  Q1m7$se, ci.lb =  Q1m7$ci.lb, ci.ub =  Q1m7$ci.ub,
annotate=TRUE, showweights=T, header=F,
slab = c("Environment invertebrate", "Pollution invertebrate", "Resource invertebrate", "Environment vertebrate", "Pollution vertebrate", "Resource vertebrate "))
Q2m1 <-
rma.mv(
g ~ 1,
V = varcovmat_2_PD$mat,
random = list( ~ 1 | as.factor(ID), ~ 1 | as.factor(Experiment), ~ 1 | Parasite),
data = dat_2,
method = "REML"
)
summary(Q2m1)
Q2m2 <-
rma.mv(
g ~ Trait.type -1 ,
V = varcovmat_2_PD$mat,
random = list( ~ 1 | as.factor(ID), ~ 1 | as.factor(Experiment), ~ 1 | Parasite),
data = dat_2,
method = "REML"
)
summary(Q2m2)
forest.default(x= Q2m2$beta, sei =  Q2m2$se, ci.lb =  Q2m2$ci.lb, ci.ub =  Q2m2$ci.ub,
annotate=TRUE, showweights=T, header=F,
slab = c("Intensity", "Prevalence"))
Q2m3 <-
rma.mv(
g ~ Trait.type : Gradient.category -1,
V = varcovmat_2_PD$mat,
random = list( ~ 1 |Experiment/ID, ~ 1 | Parasite),
data = dat_2,
method = "REML"
)
summary(Q2m3)
forest.default(x= Q2m3$beta, sei =  Q2m3$se, ci.lb =  Q2m3$ci.lb, ci.ub =  Q2m3$ci.ub,
annotate=TRUE, showweights=T, header=F,
slab = c("Environment intensity", "Environment prevalence", "Pollution intensity", "Pollution prevalence", "Resource intensity", "Resource prevalence"))
Q2m4 <-
rma.mv(
g ~ Trait.type:Host.type.2:Gradient.category -1,
V = varcovmat_2_PD$mat,
random = list( ~ 1 | ID, ~ 1 | Experiment, ~ 1 | Parasite),
data = dat_2,
method = "REML"
)
summary(Q2m4)
forest.default(x= Q2m4$beta, sei =  Q2m4$se, ci.lb =  Q2m4$ci.lb, ci.ub =  Q2m4$ci.ub,
annotate=TRUE, showweights=T, header=F,
slab = c("Environment invertebrate intensity", "Environment invertebrate prevalence", "Environment vertebrate intensity", "Environment vertebrate prevalence", "Pollution invertebrate intensity", "Pollution invertebrate prevalence", "Pollution vertebrate intensity", "Pollution vertebrate prevalence", "Resource invertebrate intensity", "Resource invertebrate prevalence", "Resource vertebrate intensity", "Resource vertebrate prevalence"))
Q3m1 <-
rma.mv(
g ~ 1,
V = varcovmat_3_PD$mat,
random = list( ~ 1 | ID, ~ 1 | Experiment, ~ 1 | Parasite),
data = dat_3,
method = "REML"
)
summary(Q3m1)
#note that this is WITH absolute value --> which one is more sensible. Both are significant.
Q3m2.1 <-
rma.mv(
abs(g) ~ Trait.category -1,
V = varcovmat_3_PD$mat,
random = list( ~ 1 | ID, ~ 1 | Experiment, ~ 1 | Parasite),
data = dat_3,
method = "REML"
)
summary(Q3m2.1)
forest.default(x= Q3m2.1$beta, sei =  Q3m2.1$se, ci.lb =  Q3m2.1$ci.lb, ci.ub =  Q3m2.1$ci.ub,
annotate=TRUE, showweights=T, header=F,
slab = c("epidemiological", "Fitness"))
#note that this is WITHOUT absolute value --> In here, resistance is not significant. Which means that the responses to stress are all over the place, while for the fitness trait is always a negative effect. Could be explained by dying individuals when getting infected, which might look like an increase in resistance (??)
Q3m2.2 <-
rma.mv(
g ~ Trait.category -1,
V = varcovmat_3_PD$mat,
random = list( ~ 1 | ID, ~ 1 | Experiment, ~ 1 | Parasite),
data = dat_3,
method = "REML"
)
summary(Q3m2.2)
forest.default(x= Q3m2.2$beta, sei =  Q3m2.2$se, ci.lb =  Q3m2.2$ci.lb, ci.ub =  Q3m2.2$ci.ub,
annotate=TRUE, showweights=T, header=F,
slab = c("Epidemiological", "Fitness"))
Q3m3 <-
rma.mv(
g ~ Trait.category:Gradient.category -1,
V = varcovmat_3_PD$mat,
random = list( ~ 1 | ID, ~ 1 | Experiment, ~ 1 | Parasite),
data = dat_3,
method = "REML"
)
summary(Q3m3)
forest.default(x= Q3m3$beta, sei =  Q3m3$se, ci.lb =  Q3m3$ci.lb, ci.ub =  Q3m3$ci.ub,
annotate=TRUE, showweights=T, header=F,
slab = c("Environment epidemiological", "Environment fitness", "Pollution epidemiological", "Pollution fitness", "Resource epidemiological", "Resource fitness"))
Q3m4 <-
rma.mv(
g ~ Trait.type:Gradient.category -1,
V = varcovmat_3_PD$mat,
random = list( ~ 1 | Experiment/ID, ~ 1 | Parasite),
data = dat_3,
method = "REML",
)
summary(Q3m4)
forest.default(x= Q3m4$beta, sei =  Q3m4$se, ci.lb =  Q3m4$ci.lb, ci.ub =  Q3m4$ci.ub,
annotate=TRUE, showweights=T, header=F,
slab = c("Environment fecundity", "Environment intensity", "Environment prevalence", "Environment survivorship", "Pollution fecundity", "Pollution intensity", "Pollution prevalence", "Pollution survivorship", "Resource fecundity", "Resource intensity", "Resource prevalence", "Resource survivorship"))
Q3m5 <-
rma.mv(
g ~ Trait.category:Host.type.2 -1,
V = varcovmat_3_PD$mat,
random = list( ~ 1 | ID, ~ 1 | Experiment, ~ 1 | Parasite),
data = dat_3,
method = "REML",
)
summary(Q3m5)
forest.default(x= Q3m5$beta, sei =  Q3m5$se, ci.lb =  Q3m5$ci.lb, ci.ub =  Q3m5$ci.ub,
annotate=TRUE, showweights=T, header=F,
slab = c("Resistance invertebrate", "Fitness invertebrate", "Resistance vertebrate", "Fitness vertebrate"))
Q3m6 <-
rma.mv(
g ~ Trait.category:Host.type.2:Gradient.category -1,
V = varcovmat_3_PD$mat,
random = list( ~ 1 | ID, ~ 1 | Experiment, ~ 1 | Parasite),
data = dat_3,
method = "REML",
)
summary(Q3m6)
forest.default(x= Q3m6$beta, sei =  Q3m6$se, ci.lb =  Q3m6$ci.lb, ci.ub =  Q3m6$ci.ub,
annotate=TRUE, showweights=T, header=F,
slab = c("Environment invertebrate epidemiological", "Environment invertebrate fitness", "Environment vertebrate epidemiological", "Environment vertebrate fitness", "Pollution invertebrate epidemiological", "Pollution invertebrate fitness", "Pollution vertebrate epidemiological", "Pollution vertebrate fitness", "Resource invertebrate epidemiological", "Resource invertebrate fitness", "Resource vertebrate epidemiological", "Resource vertebrate fitness"))
Q3m7 <-
rma.mv(
g ~ Trait.type:Host.type.2:Gradient.category -1,
V = varcovmat_3_PD$mat,
random = list( ~ 1 | ID, ~ 1 | Experiment, ~ 1 | Parasite),
data = dat_3,
method = "REML",
)
summary(Q3m7)
forest.default(x= Q3m7$beta, sei =  Q3m7$se, ci.lb =  Q3m7$ci.lb, ci.ub =  Q3m7$ci.ub,
annotate=TRUE, showweights=T, header=F,
slab = c("Environment invertebrate fecundity", "Environment invertebrate intensity", "Environment invertebrate prevalence", "Environment invertebrate survivorship", "Environment vertebrate intensity", "Environment vertebrate prevalence", "Environment vertebrate survivorship", "Pollution invertebrate fecundity", "Pollution invertebrate intensity", "Pollution invertebrate prevalence", "Pollution invertebrate survivorship", "Pollution vertebrate intensity", "Pollution vertebrate prevalence", "Pollution vertebrate survivorship", "Resource invertebrate fecundity", "Resource invertebrate intensity", "Resource invertebrate prevalence", "Resource invertebrate survivorship", "Resource vertebrate intensity", "Resource vertebrate prevalence", "Resource vertebrate survivorship"))
# make new factor for colour grouping
nlvl <- length(unique(dat_1$Experiment))
pal <- wes_palette("Darjeeling1", nlvl, type = "continuous")
dat_1$Exp_nn <- as.factor(x=dat_1$Experiment)
levels(dat_1$Exp_nn) <- as.factor(seq(1:nlvl))
# plot funnel
metafor::funnel(dat_1$g, dat_1$var.g, level=c(90, 95, 99), shade=c("white", "gray55", "gray75"), col=pal[dat_1$Exp_nn], back = "white", refline=0, legend=TRUE)
# maybe we want to visualize the two fitness traits separately
dat_1_Surv <-dat_1[which(dat_1$Trait.type == "Survivorship"),]
# colour grouping
nlvl <- length(unique(dat_1_Surv$Experiment))
pal_Surv <- wes_palette("Darjeeling1", nlvl, type = "continuous")
dat_1_Surv$Exp_nn <- as.factor(x=dat_1_Surv$Experiment)
levels(dat_1_Surv$Exp_nn) <- as.factor(seq(1:nlvl))
# plot funnel
metafor::funnel(dat_1_Surv$g, dat_1_Surv$var.g, level=c(90, 95, 99), shade=c("white", "gray55", "gray75"), col=pal[dat_1_Surv$Exp_nn], back = "white", refline=0, legend=TRUE)
# for fecundity
dat_1_Fecund <-dat_1[which(dat_1$Trait.type == "Fecundity"),]
# colour grouping
nlvl <- length(unique(dat_1_Fecund$Experiment))
pal_Fecund <- wes_palette("Darjeeling1", nlvl, type = "continuous")
dat_1_Fecund$Exp_nn <- as.factor(x=dat_1_Fecund$Experiment)
levels(dat_1_Fecund$Exp_nn) <- as.factor(seq(1:nlvl))
#plot funnel
metafor::funnel(x = dat_1_Fecund$g, vi = dat_1_Fecund$var.g,  level=c(90, 95, 99), shade=c("white", "gray55", "gray75"), col=pal[dat_1_Fecund$Exp_nn], back = "white", refline=0, legend=TRUE)
# make new factor for colour grouping
nlvl <- length(unique(dat_2$Experiment))
pal <- wes_palette("Darjeeling1", nlvl, type = "continuous")
dat_2$Exp_nn <- as.factor(x=dat_2$Experiment)
levels(dat_2$Exp_nn) <- as.factor(seq(1:nlvl))
# plot funnel
metafor::funnel(dat_2$g, dat_2$var.g, level=c(90, 95, 99), shade=c("white", "gray55", "gray75"), col=pal[dat_2$Exp_nn], back = "white", refline=0, legend=TRUE)
# there is one extreme study with low precision and apparently a huge effect size. Which one is it?
dat_2$Study[which(dat_2$var.g == max(dat_2$var.g))]
# let's see how it looks without that one
dat_2_no <- dat_2[-which(dat_2$Study == "Carrington et al. 2013. PLOS NegTropDiseases"),]
# make new factor for colour grouping
nlvl <- length(unique(dat_2_no$Experiment))
pal <- wes_palette("Darjeeling1", nlvl, type = "continuous")
dat_2_no$Exp_nn <- droplevels(dat_2_no$Exp_nn)
levels(dat_2_no$Exp_nn) <- as.factor(seq(1:nlvl))
metafor::funnel(dat_2_no$g, dat_2_no$var.g, level=c(90, 95, 99), shade=c("white", "gray55", "gray75"), col=pal[dat_2_no$Exp_nn], back = "white", refline=0, legend=TRUE)
# maybe we want to visualize the two resistance traits separately
dat_2_Int <-dat_2[which(dat_2$Trait.type == "Intensity"),]
# colour grouping
nlvl <- length(unique(dat_2_Int$Experiment))
pal_Int <- wes_palette("Darjeeling1", nlvl, type = "continuous")
dat_2_Int$Exp_nn <- as.factor(x=dat_2_Int$Experiment)
levels(dat_2_Int$Exp_nn) <- as.factor(seq(1:nlvl))
# plot funnel
metafor::funnel(dat_2_Int$g, dat_2_Int$var.g, level=c(90, 95, 99), shade=c("white", "gray55", "gray75"), col=pal[dat_2_Int$Exp_nn], back = "white", refline=0, legend=TRUE)
# for prevalence
dat_2_Pre <-dat_2_no[which(dat_2$Trait.type == "Prevalence"),]
# colour grouping
nlvl <- length(unique(dat_2_Pre$Experiment))
pal_Pre <- wes_palette("Darjeeling1", nlvl, type = "continuous")
dat_2_Pre$Exp_nn <- as.factor(x=dat_2_Pre$Experiment)
levels(dat_2_Pre$Exp_nn) <- as.factor(seq(1:nlvl))
#plot funnel
metafor::funnel(x = dat_2_Pre$g, vi = dat_2_Pre$var.g,  level=c(90, 95, 99), shade=c("white", "gray55", "gray75"), col=pal[dat_2_Pre$Exp_nn], back = "white", refline=0, legend=TRUE)
# get residuals from null model
dat_1$res <- rstandard.rma.mv(Q1m1)$res
# calculate precision
dat_1$precision <-  1/sqrt(dat_1$var.g)
# meta regression with effect size
rma.mv(g ~ precision,
V = varcovmat_1_PD$mat,
random = list( ~ 1 | Experiment/ID, ~ 1 | Parasite),
data = dat_1,
method = "REML")
# meta regression with residual
rma.mv(res ~ precision,
V = varcovmat_1_PD$mat,
random = list( ~ 1 | Experiment/ID, ~ 1 | Parasite),
data = dat_1,
method = "REML")
# get residuals from null model
dat_2$res <- rstandard.rma.mv(Q2m1)$res
# calculate precision
dat_2$precision <-  1/sqrt(dat_2$var.g)
# meta regression with effect size
rma.mv(g ~ precision,
V = varcovmat_2_PD$mat,
random = list( ~ 1 | Experiment/ID, ~ 1 | Parasite),
data = dat_2,
method = "REML")
# meta regression with residual
rma.mv(res ~ precision,
V = varcovmat_2_PD$mat,
random = list( ~ 1 | Experiment/ID, ~ 1 | Parasite),
data = dat_2,
method = "REML")
# Cook's distance
Cook_dat1 <- cooks.distance(Q1m4, progbar=TRUE, dat_1$Study, reestimate=TRUE, parallel="multicore", ncpus = 2)
# how are these distances distributes?
hist(Cook_dat1)
# Which are the most influential studies?
Cook_dat1[which(Cook_dat1 > 1)]
# dfbetas
dfbetas_dat1 <- dfbetas.rma.mv(Q1m4, progbar=TRUE, dat_1$Study, reestimate=TRUE, parallel="multicore")
# Which are the most influential studies?
dfbetas_dat1[abs(dfbetas_dat1[,1])>1 | abs(dfbetas_dat1[,2])>1
| abs(dfbetas_dat1[,3])>1 | abs(dfbetas_dat1[,4])>1
| abs(dfbetas_dat1[,5])>1 | abs(dfbetas_dat1[,6])>1,]
# hat values
hat_dat1 <- hatvalues(Q1m4)
# Which are the most influential effects?
inf_cutoff <- 3 * length(Q1m4$beta)/nrow(dat_1)
dat_1$Study[hat_dat1 > inf_cutoff]
# Cook's distance
Cook_dat2 <- cooks.distance(Q2m4, progbar=TRUE, dat_2$Study, reestimate=TRUE, parallel="multicore", ncpus = 2)
# how are these distances distributes?
hist(Cook_dat2)
# Which are the most influential studies?
Cook_dat2[which(Cook_dat2 > 1)]
# dfbetas
dfbetas_dat2 <- dfbetas.rma.mv(Q2m4, progbar=TRUE, dat_2$Study, reestimate=TRUE, parallel="multicore")
# Which are the most influential studies?
dfbetas_dat2[abs(dfbetas_dat2[,1])>1 | abs(dfbetas_dat2[,2])>1
| abs(dfbetas_dat2[,3])>1 | abs(dfbetas_dat2[,4])>1
| abs(dfbetas_dat2[,5])>1 | abs(dfbetas_dat2[,6])>1,]
# hat values
hat_dat2 <- hatvalues(Q2m4)
# Which are the most influential effects?
inf_cutoff <- 3 * length(Q2m4$beta)/nrow(dat_2)
dat_2$Study[hat_dat2 > inf_cutoff]
# Cook's distance
Cook_dat3 <- cooks.distance(Q3m4, progbar=TRUE, dat_3$Study, reestimate=TRUE, parallel="multicore", ncpus = 4)
# how are these distances distributes?
hist(Cook_dat3)
# Which are the most influential studies?
Cook_dat3[which(Cook_dat3 > 3)]
# dfbetas
dfbetas_dat3 <- dfbetas.rma.mv(Q3m4, progbar=TRUE, dat_3$Study, reestimate=TRUE, parallel="multicore")
# Which are the most influential studies?
dfbetas_dat3[abs(dfbetas_dat3[,1])>1 | abs(dfbetas_dat3[,2])>1
| abs(dfbetas_dat3[,3])>1 | abs(dfbetas_dat3[,4])>1
| abs(dfbetas_dat3[,5])>1 | abs(dfbetas_dat3[,6])>1,]
# hat values
hat_dat3 <- hatvalues(Q3m4)
# Which are the most influential effects?
inf_cutoff <- 3 * length(Q3m4$beta)/nrow(dat_3)
dat_3$Study[hat_dat3 > inf_cutoff]
# we account for covariance in sampling errors by using V, but assuming equal heterogeneity between fecundity vs survival and between environment, pollution and resources.
# matrix of sampling variances and covariances W
W <- solve(varcovmat_1_PD$mat)
# model matrix
X <- model.matrix(Q1m4)
# estimate heterogeneity
P <- W - W %*% X %*% solve(t(X) %*% W %*% X) %*% t(X) %*% W
# overall I2: how much of total variance is attributed to heterogeneity
100 * sum(Q1m4$sigma2) / (sum(Q1m4$sigma2) + (Q1m4$k-Q1m4$p)/sum(diag(P)))
# Heterogeneity between experiments, within experiments, between parasites
100 * Q1m4$sigma2 / (sum(Q1m4$sigma2) + (Q1m4$k-Q1m4$p)/sum(diag(P)))
sav <- confint(Q1m4)
#profile(Q1m4)
# confidence intervals for I2
100 * sav[[1]]$random[1,2:3] /(sum(Q1m4$sigma2) + (Q1m4$k-Q1m4$p)/sum(diag(P))) ### CI for experiment-level I^2
100 * sav[[2]]$random[1,2:3] / (sum(Q1m4$sigma2)+ (Q1m4$k-Q1m4$p)/sum(diag(P))) ### CI for the ID-level I^2
100 * sav[[3]]$random[1,2:3] / (sum(Q1m4$sigma2) + (Q1m4$k-Q1m4$p)/sum(diag(P)))  ### CI for the parasite-level I^2
# we account for covariance in sampling errors by using V, but assuming equal heterogeneity between fecundity vs survival and between environment, pollution and resources.
# matrix of sampling variances and covariances W
W <- solve(varcovmat_2_PD$mat)
# model matrix
X <- model.matrix(Q2m3)
# estimate heterogeneity
P <- W - W %*% X %*% solve(t(X) %*% W %*% X) %*% t(X) %*% W
# overall I2: how much of total variance is attributed to heterogeneity
100 * sum(Q2m3$sigma2) / (sum(Q2m3$sigma2) + (Q2m3$k-Q2m3$p)/sum(diag(P)))
# Heterogeneity between experiments, within experiments, between parasites
100 * Q2m3$sigma2 / (sum(Q2m3$sigma2) + (Q2m3$k-Q2m3$p)/sum(diag(P)))
sav2 <- confint(Q2m3)
#profile(Q2m3)
# confidence intervals for I2
100 * sav2[[1]]$random[1,2:3] /(sum(Q2m3$sigma2) + (Q2m3$k-Q2m3$p)/sum(diag(P))) ### CI for experiment-level I^2
100 * sav2[[2]]$random[1,2:3] / (sum(Q2m3$sigma2)+ (Q2m3$k-Q2m3$p)/sum(diag(P))) ### CI for the ID-level I^2
100 * sav2[[3]]$random[1,2:3] / (sum(Q2m3$sigma2) + (Q2m3$k-Q2m3$p)/sum(diag(P)))  ### CI for the parasite-level I^2
# we account for covariance in sampling errors by using V, but assuming equal heterogeneity between fecundity vs survival and between environment, pollution and resources.
# matrix of sampling variances and covariances W
W <- solve(varcovmat_3_PD$mat)
# model matrix
X <- model.matrix(Q3m4)
# estimate heterogeneity
P <- W - W %*% X %*% solve(t(X) %*% W %*% X) %*% t(X) %*% W
# overall I2: how much of total variance is attributed to heterogeneity
100 * sum(Q3m4$sigma2) / (sum(Q3m4$sigma2) + (Q3m4$k-Q3m4$p)/sum(diag(P)))
# Heterogeneity between experiments, within experiments, between parasites
100 * Q3m4$sigma2 / (sum(Q3m4$sigma2) + (Q3m4$k-Q3m4$p)/sum(diag(P)))
sav2 <- confint(Q3m4)
#profile(Q3m4)
# confidence intervals for I2
100 * sav2[[1]]$random[1,2:3] /(sum(Q3m4$sigma2) + (Q3m4$k-Q3m4$p)/sum(diag(P))) ### CI for experiment-level I^2
100 * sav2[[2]]$random[1,2:3] / (sum(Q3m4$sigma2)+ (Q3m4$k-Q3m4$p)/sum(diag(P))) ### CI for the ID-level I^2
100 * sav2[[3]]$random[1,2:3] / (sum(Q3m4$sigma2) + (Q3m4$k-Q3m4$p)/sum(diag(P)))  ### CI for the parasite-level I^2
# between experiment effects
random <- ranef(Q1m4)
random_exp <- data.frame(random$Experiment)
random_exp$Experiment <- rownames(random_exp)
for (i in 1:nrow(random_exp)){
random_exp$gr[i] <- dat_1$Gradient.category[dat_1$Experiment == random_exp$Experiment[i]][1]
}
random_exp <- random_exp[order(random_exp$intrcpt),]
random_exp <- random_exp[order(random_exp$gr),]
pal <- wes_palette("IsleofDogs1", n = 3)
Exp_het <-
ggplot(data = random_exp, aes(x = Experiment, colour = gr)) +
geom_errorbar(aes(ymin = pi.lb, ymax = pi.ub), size = 2) +
scale_x_discrete(limits = random_exp$Experiment) +
theme_light(base_size = 16) +
theme(
panel.grid.major.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank()
) +
scale_colour_manual(values = pal, name = "Stressor") +
labs(y = "prediction interval")
Exp_het
# within experiment effects
random_id <- data.frame(random$`Experiment/ID`)
random_id$ID <- as.factor(dat_1$ID)
for (i in 1:nrow(random_id)){
random_id$gr[i] <- dat_1$Gradient.category[i]
}
random_id <- random_id[order(random_id$intrcpt),]
random_id <- random_id[order(random_id$gr),]
pal <- wes_palette("IsleofDogs1", n = 3)
Id_het <-
ggplot(data = random_id, aes(x = ID, colour = gr)) +
geom_errorbar(aes(ymin = pi.lb, ymax = pi.ub), size = 1) +
scale_x_discrete(limits = random_id$ID) +
theme_light(base_size = 16) +
theme(
panel.grid.major.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank()
) +
scale_colour_manual(values = pal, name = "Stressor") +
labs(y = "prediction interval")
Id_het
# between experiment effects
random <- ranef(Q2m3)
random_exp <- data.frame(random$Experiment)
random_exp$Experiment <- rownames(random_exp)
for (i in 1:nrow(random_exp)){
random_exp$gr[i] <- dat_2$Gradient.category[dat_2$Experiment == random_exp$Experiment[i]][1]
}
random_exp <- random_exp[order(random_exp$intrcpt),]
random_exp <- random_exp[order(random_exp$gr),]
pal <- wes_palette("IsleofDogs1", n = 3)
Exp_het <-
ggplot(data = random_exp, aes(x = Experiment, colour = gr)) +
geom_errorbar(aes(ymin = pi.lb, ymax = pi.ub), size = 1.5) +
scale_x_discrete(limits = random_exp$Experiment) +
theme_light(base_size = 16) +
theme(
panel.grid.major.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank()
) +
scale_colour_manual(values = pal, name = "Stressor") +
labs(y = "prediction interval")
Exp_het
# within experiment effects
random_id <- data.frame(random$`Experiment/ID`)
random_id$ID <- as.factor(dat_2$ID)
for (i in 1:nrow(random_id)){
random_id$gr[i] <- dat_2$Gradient.category[i]
}
random_id <- random_id[order(random_id$intrcpt),]
random_id <- random_id[order(random_id$gr),]
pal <- wes_palette("IsleofDogs1", n = 3)
Id_het <-
ggplot(data = random_id, aes(x = ID, colour = gr)) +
geom_errorbar(aes(ymin = pi.lb, ymax = pi.ub), size = 1) +
scale_x_discrete(limits = random_id$ID) +
theme_light(base_size = 16) +
theme(
panel.grid.major.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank()
) +
scale_colour_manual(values = pal, name = "Stressor") +
labs(y = "prediction interval")
Id_het
# between experiment effects
random <- ranef(Q3m4)
random_exp <- data.frame(random$Experiment)
random_exp$Experiment <- rownames(random_exp)
for (i in 1:nrow(random_exp)){
random_exp$gr[i] <- dat_3$Gradient.category[dat_3$Experiment == random_exp$Experiment[i]][1]
}
random_exp <- random_exp[order(random_exp$intrcpt),]
random_exp <- random_exp[order(random_exp$gr),]
pal <- wes_palette("IsleofDogs1", n = 3)
Exp_het <-
ggplot(data = random_exp, aes(x = Experiment, colour = gr)) +
geom_errorbar(aes(ymin = pi.lb, ymax = pi.ub), size = 1.5) +
scale_x_discrete(limits = random_exp$Experiment) +
theme_light(base_size = 16) +
theme(
panel.grid.major.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank()
) +
scale_colour_manual(values = pal, name = "Stressor")  +
labs(y = "prediction interval")
Exp_het
# within experiment effects
random_id <- data.frame(random$`Experiment/ID`)
random_id$ID <- as.factor(dat_3$ID)
for (i in 1:nrow(random_id)){
random_id$gr[i] <- dat_3$Gradient.category[i]
}
random_id <- random_id[order(random_id$intrcpt),]
random_id <- random_id[order(random_id$gr),]
pal <- wes_palette("IsleofDogs1", n = 3)
Id_het <-
ggplot(data = random_id, aes(x = ID, colour = gr)) +
geom_errorbar(aes(ymin = pi.lb, ymax = pi.ub), size = 1) +
scale_x_discrete(limits = random_id$ID) +
theme_light(base_size = 16) +
theme(
panel.grid.major.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank()
) +
scale_colour_manual(values = pal, name = "Stressor") +
labs(y = "prediction interval")
Id_het
