mean(abs(c(temp_C1, temp_C2))) * sqrt(dat$N_X[i])
} else {
# approximate SD if IQ range is reported
if (dat$Variation.Type[i] == "IQ") {
dat$SD_C[i] <- (dat$Upr_C[i] - dat$Lwr_C[i]) / 1.35
dat$SD_X[i] <- (dat$Upr_X[i] - dat$Lwr_X[i]) / 1.35
}
else {
# if SD is reported leave as such
if (dat$Variation.Type[i] == "SD") {
dat$SD_C[i] <- dat$Variation_C[i]
dat$SD_X[i] <- dat$Variation_X[i]
} else {
# if there is no appropriate data, make these columns NA
dat$SD_C[i] <- NA
dat$SD_X[i] <- NA
}
}
}
}
}
# within groups standard deviation
dat$S_within <-
sqrt(((dat$N_C - 1) * dat$SD_C ^ 2 + (dat$N_X - 1) * dat$SD_X ^ 2) / (dat$N_C + dat$N_X - 2))
# standardized effect size
for (i in 1:N) {
# standardized mean difference
# we can't include data without variance
if (is.na(dat$S_within[i]) == FALSE & dat$S_within[i] > 0) {
dat$d[i] <- (dat$Mean_X[i] - dat$Mean_C[i]) / dat$S_within[i]
dat$var.d[i] <-
(dat$N_C[i] + dat$N_X[i]) / (dat$N_C[i] * dat$N_X[i]) + (dat$d[i] ^ 2) /
(2 * (dat$N_C[i] + dat$N_X[i]))
}
else{
# if only F statistic is reported - no cases of this yet!
if (dat$Variation.Type[i] == "F_X") {
dat$d[i] <-
sqrt(dat$F_X[i] * (dat$N_X[i] + dat$N_C[i]) / (dat$N_C[i] * dat$N_X[i]))
dat$var.d[i] <-
(dat$N_C[i] + dat$N_X[i]) / (dat$N_C[i] * dat$N_X[i]) + (dat$d[i] ^ 2) /
(2 * (dat$N_C[i] + dat$N_X[i]))
} else{
# if Z and N are reported for a regression analysis
if (dat$Variation.Type[i] == "Z_reg") {
r <- dat$Z_X[i] / sqrt(dat$Z_N[i])
dat$d[i] <- (2 * r) / (sqrt(1 - r ^ 2))
Vr <- (1 - r ^ 2) ^ 2 / (dat$Z_N[i] - 1)
dat$var.d[i] <- (4 * Vr) / (1 - r ^ 2) ^ 3
}
else{
# if t and N are reported for a regression analysis
if (dat$Variation.Type[i] == "t") {
r <- sqrt((dat$Z_X[i] ^ 2) / (dat$Z_X[i] ^ 2 + dat$Z_df[i]))
dat$d[i] <- (2 * r) / (sqrt(1 - r ^ 2))
Vr <- (1 - r ^ 2) ^ 2 / (dat$R_N[i] - 1)
dat$var.d[i] <- (4 * Vr) / (1 - r ^ 2) ^ 3
}
else{
# If Z is reported from a comparison of two independent groups
if (dat$Variation.Type[i] == "Z") {
dat$d[i] <-
sqrt(abs(dat$Z_X[i]) * sqrt(dat$N_C[i] + dat$N_X[i]) / (1 - sqrt(
dat$Z_X[i] ^ 2 * (dat$N_C[i] + dat$N_X[i]) ^ -1
)))
dat$var.d[i] <-
(dat$N_C[i] + dat$N_X[i]) / (dat$N_C[i] * dat$N_X[i]) + (dat$d[i] ^ 2) /
(2 * (dat$N_C[i] + dat$N_X[i]))
}
else{
# converting log OR
if (is.na(dat$Log.OR.v[i]) == FALSE &
dat$Log.OR.v[i] > 0) {
dat$d[i] <- dat$Log.OR[i] * (sqrt(3) / pi)
dat$var.d[i] <- dat$Log.OR.v[i] * 3 / pi ^ 2
} else {
# for now, leave other types of effects as NA
dat$d[i] <- NA
dat$var.d[i] <- NA
}
}
}
}
}
}
}
# sample size correction factor
for (i in 1:N) {
# if odds ratio or comparison between means
if (is.na(dat$N_C[i]) == F) {
dat$J[i] <- 1 - 3 / (4 * (dat$N_C[i] + dat$N_X[i] - 2) - 1)
} else {
# if correlation
if (is.na(dat$R_N[i]) == F) {
dat$J[i] <- 1 - 3 / (4 * (dat$R_N[i] - 2) - 1)
}else {
dat$J[i] <- NA
}
}
}
# corrected effect size
dat$g <- dat$J * dat$d
# and variance
dat$var.g <- (dat$J ^ 2) * dat$var.d
mort <- grep(pattern = "[M,m]ort", x = dat$Trait)
for(i in mort){
dat$g[i] <- -dat$g[i]
}
# For now, get rid of NAs
dat <- dat[(is.na(dat$d) == F),]
# How many experiments do we have?
Exps <- unique(dat$Experiment)
# A data frame of experiments that included Infected demographic and Uninfected demographic effects
dat_1 <- data.frame()
# A data frame of experiments that included Infected demographic and Epidemiological effects
dat_3 <- data.frame()
# populate data sets with corresponding experiments
for (i in Exps) {
tmp <- dat[which(dat$Experiment == i), ]
if ("Uninfected demographic" %in% tmp$Trait.category &
"Infected demographic" %in% tmp$Trait.category) {
dat_1 <- rbind(dat_1, tmp)
}
if ("Epidemiological" %in% tmp$Trait.category &
"Infected demographic" %in% tmp$Trait.category) {
dat_3 <- rbind(dat_3, tmp)
}
}
dat_1 <- dat_1[which(dat_1$Trait.category == "Uninfected demographic" | dat_1$Trait.category == "Infected demographic"),]
dat_3 <- dat_3[which(dat_3$Trait.category == "Epidemiological" | dat_3$Trait.category == "Infected demographic"),]
# A data frame with experiments that include just epidemiological effects
dat_2 <- dat_3[which(dat_3$Trait.category == "Epidemiological"),]
studies_1 <- unique(dat_1$Study)
studies_to_check <- c()
negative_eigen <- c()
for (k in studies_1) {
dat_study <- dat_1[which(dat_1$Study == k),]
varcovmat = matrix(0,
nrow = dim(dat_study)[1],
ncol = dim(dat_study)[1])
for (i in 1:dim(dat_study)[1]) {
for (j in 1:dim(dat_study)[1]) {
if (i == j) {
varcovmat[i, j] = dat_study$var.g[i]
} else{
if (dat_study[i, "Experiment"] == dat_study[j, "Experiment"] &
dat_study[i, "Level_C"] == dat_study[j, "Level_C"] &
dat_study[i, "Trait"] == dat_study[j, "Trait"] &
dat_study[i, "Trait.category"] == dat_study[j, "Trait.category"]) {
varcovmat[i, j] = 1 / dat_study[i, "N_C"] + dat_study$g[i] * dat_study$g[j] /
(dat_study[i, "N_C"] + dat_study[i, "N_X"] + dat_study[j, "N_X"])
}
}
}
}
val <- eigen(varcovmat)
for (m in 1:length(val$values)) {
if (val$values[m] < 0) {
studies_to_check <- append(studies_to_check, k)
negative_eigen <- append(negative_eigen, val$values[m])
}
}
}
Neg_eigen_1 <- data.frame(study = studies_to_check, eigen = negative_eigen)
Neg_eigen_1 %>%
kbl() %>%
kable_material(c("striped", "hover"), full_width = F)
studies_2 <- unique(dat_2$Study)
studies_to_check <- c()
negative_eigen <- c()
for (k in studies_2) {
dat_study <- dat_2[which(dat_2$Study == k),]
varcovmat = matrix(0,
nrow = dim(dat_study)[1],
ncol = dim(dat_study)[1])
for (i in 1:dim(dat_study)[1]) {
for (j in 1:dim(dat_study)[1]) {
if (i == j) {
varcovmat[i, j] = dat_study$var.g[i]
} else{
if (dat_study[i, "Experiment"] == dat_study[j, "Experiment"] &
dat_study[i, "Level_C"] == dat_study[j, "Level_C"] &
dat_study[i, "Trait"] == dat_study[j, "Trait"] &
dat_study[i, "Trait.category"] == dat_study[j, "Trait.category"]) {
varcovmat[i, j] = 1 / dat_study[i, "N_C"] + dat_study$g[i] * dat_study$g[j] /
(dat_study[i, "N_C"] + dat_study[i, "N_X"] + dat_study[j, "N_X"])
}
}
}
}
val <- eigen(varcovmat)
for (m in 1:length(val$values)) {
if (val$values[m] < 0) {
studies_to_check <- append(studies_to_check, k)
negative_eigen <- append(negative_eigen, val$values[m])
}
}
}
Neg_eigen_2 <- data.frame(study = studies_to_check, eigen = negative_eigen)
Neg_eigen_2 %>%
kbl() %>%
kable_material(c("striped", "hover"), full_width = F)
studies_3 <- unique(dat_3$Study)
studies_to_check <- c()
negative_eigen <- c()
for (k in studies_3) {
dat_study <- dat_3[which(dat_3$Study == k),]
varcovmat = matrix(0,
nrow = dim(dat_study)[1],
ncol = dim(dat_study)[1])
for (i in 1:dim(dat_study)[1]) {
for (j in 1:dim(dat_study)[1]) {
if (i == j) {
varcovmat[i, j] = dat_study$var.g[i]
} else{
if (dat_study[i, "Experiment"] == dat_study[j, "Experiment"] &
dat_study[i, "Level_C"] == dat_study[j, "Level_C"] &
dat_study[i, "Trait"] == dat_study[j, "Trait"] &
dat_study[i, "Trait.category"] == dat_study[j, "Trait.category"]) {
varcovmat[i, j] = 1 / dat_study[i, "N_C"] + dat_study$g[i] * dat_study$g[j] /
(dat_study[i, "N_C"] + dat_study[i, "N_X"] + dat_study[j, "N_X"])
}
}
}
}
val <- eigen(varcovmat)
for (m in 1:length(val$values)) {
if (val$values[m] < 0) {
studies_to_check <- append(studies_to_check, k)
negative_eigen <- append(negative_eigen, val$values[m])
}
}
}
Neg_eigen_3 <- data.frame(study = studies_to_check, eigen = negative_eigen)
Neg_eigen_3 %>%
kbl() %>%
kable_material(c("striped", "hover"), full_width = F)
# exclude suspicious studies with highly negative eigenvalues
dat_1 <- dat_1[-grep("Ashraf et al. 2017 Environ Sci Pollut Res", dat_1$Study),]
dat_1 <- dat_1[-grep("Shostak et al. 2015. Journal of Parasitology", dat_1$Study),]
dat_1 <- dat_1[-grep(121, dat_1$Experiment),]
varcovmat_1 = matrix(0, nrow = dim(dat_1)[1], ncol = dim(dat_1)[1])
for (i in 1:dim(dat_1)[1]) {
for (j in 1:dim(dat_1)[1]) {
if (i == j) {varcovmat_1[i,j] = dat_1$var.g[i]}else{
if (dat_1[i, "Experiment"] == dat_1[j, "Experiment"] & dat_1[i, "Level_C"] == dat_1[j, "Level_C"] & dat_1[i, "Trait"] == dat_1[j, "Trait"] & dat_1[i, "Trait.category"] == dat_1[j, "Trait.category"]) {
varcovmat_1[i,j] = 1/dat_1[i,"N_C"] + dat_1$g[i]*dat_1$g[j]/(dat_1[i,"N_C"] + dat_1[i,"N_X"] + dat_1[j,"N_X"])
}
}
}
}
# correct negative eigens in the few studies with large covar to var ratios
varcovmat_1_PD <- nearPD(varcovmat_1,  keepDiag = TRUE)
# exclude suspicious studies with highly negative eigenvalues
dat_2 <- dat_2[-grep("Ashraf et al. 2017 Environ Sci Pollut Res", dat_2$Study),]
varcovmat_2 = matrix(0, nrow = dim(dat_2)[1], ncol = dim(dat_2)[1])
for (i in 1:dim(dat_2)[1]) {
for (j in 1:dim(dat_2)[1]) {
if (i == j) {varcovmat_2[i,j] = dat_2$var.g[i]}else{
if (dat_2[i, "Experiment"] == dat_2[j, "Experiment"] & dat_2[i, "Level_C"] == dat_2[j, "Level_C"] & dat_2[i, "Trait"] == dat_2[j, "Trait"] & dat_2[i, "Trait.category"] == dat_2[j, "Trait.category"]) {
varcovmat_2[i,j] = 1/dat_2[i,"N_C"] + dat_2$g[i]*dat_2$g[j]/(dat_2[i,"N_C"] + dat_2[i,"N_X"] + dat_2[j,"N_X"])
}
}
}
}
# correct negative eigens in the few studies with large covar to var ratios
varcovmat_2_PD <- nearPD(varcovmat_2,  keepDiag = TRUE)
# exclude suspicious studies with highly negative eigenvalues
dat_3 <- dat_3[-grep("Ashraf et al. 2017 Environ Sci Pollut Res", dat_3$Study),]
# Carrington et al. 2013 has extremely large sampling variance for a parasite prevalence effect. DOUBLE CHECK!!!
dat_3 <- dat_3[-grep("Carrington et al. 2013. PLOS NegTropDiseases", dat_3$Study),]
varcovmat_3 = matrix(0, nrow = dim(dat_3)[1], ncol = dim(dat_3)[1])
for (i in 1:dim(dat_3)[1]) {
for (j in 1:dim(dat_3)[1]) {
if (i == j) {varcovmat_3[i,j] = dat_3$var.g[i]}else{
if (dat_3[i, "Experiment"] == dat_3[j, "Experiment"] & dat_3[i, "Level_C"] == dat_3[j, "Level_C"] & dat_3[i, "Trait"] == dat_3[j, "Trait"] & dat_3[i, "Trait.category"] == dat_3[j, "Trait.category"]) {
varcovmat_3[i,j] = 1/dat_3[i,"N_C"] + dat_3$g[i]*dat_3$g[j]/(dat_3[i,"N_C"] + dat_3[i,"N_X"] + dat_3[j,"N_X"])
}
}
}
}
# correct eigenvalues in the few studies with large covar to var ratios
varcovmat_3_PD <- nearPD(varcovmat_3, keepDiag = TRUE)
# For now remove rare host types to check interaction with host
dat_3_byHost <- dat_3[which(dat_3$Host.type == "Arthropod" | dat_3$Host.type == "Mollusc" | dat_3$Host.type == "Fish" | dat_3$Host.type == "Amphibian"), ]
varcovmat_3_byHost = matrix(0, nrow = dim(dat_3_byHost)[1], ncol = dim(dat_3_byHost)[1])
for (i in 1:dim(dat_3_byHost)[1]) {
for (j in 1:dim(dat_3_byHost)[1]) {
if (i == j) {varcovmat_3_byHost[i,j] = dat_3_byHost$var.g[i]}else{
if (dat_3_byHost[i, "Experiment"] == dat_3_byHost[j, "Experiment"] & dat_3_byHost[i, "Level_C"] == dat_3_byHost[j, "Level_C"] & dat_3_byHost[i, "Trait"] == dat_3_byHost[j, "Trait"] & dat_3_byHost[i, "Trait.category"] == dat_3_byHost[j, "Trait.category"]) {
varcovmat_3_byHost[i,j] = 1/dat_3_byHost[i,"N_C"] + dat_3_byHost$g[i]*dat_3_byHost$g[j]/(dat_3_byHost[i,"N_C"] + dat_3_byHost[i,"N_X"] + dat_3_byHost[j,"N_X"])
}
}
}
}
# correct eigenvalues in the few studies with large covar to var ratios
varcovmat_3_byHost_PD <- nearPD(varcovmat_3_byHost,  keepDiag = TRUE)
dat_1 <- mutate(dat_1, Host.type.2 = case_when(
Host.type == "Fish" ~ "Vertebrate",
Host.type == "Arthropod" ~ "Invertebrate",
Host.type == "Amphibian" ~ "Vertebrate",
Host.type == "Mollusc" ~ "Invertebrate"))
dat_2 <- mutate(dat_2, Host.type.2 = case_when(
Host.type == "Fish" ~ "Vertebrate",
Host.type == "Arthropod" ~ "Invertebrate",
Host.type == "Amphibian" ~ "Vertebrate",
Host.type == "Mollusc" ~ "Invertebrate",
Host.type == "Reptile" ~ "Vertebrate",
Host.type == "Bird" ~ "Vertebrate",
Host.type == "Mammal" ~ "Vertebrate"))
dat_3 <- mutate(dat_3, Host.type.2 = case_when(
Host.type == "Fish" ~ "Vertebrate",
Host.type == "Arthropod" ~ "Invertebrate",
Host.type == "Amphibian" ~ "Vertebrate",
Host.type == "Mollusc" ~ "Invertebrate",
Host.type == "Reptile" ~ "Vertebrate",
Host.type == "Bird" ~ "Vertebrate",
Host.type == "Mammal" ~ "Vertebrate"))
d_stats <-
data.frame(
stat = c(
"Number of papers",
"Number of effects",
"Number of experiments",
"Number of arthropod species",
"Number of mollusc species",
"Number of fish species",
"Number of amphibian species",
"Number of reptile species",
"Number of bird species",
"Number of mammal species",
"Number of viral taxa",
"Number of bacterial taxa",
"Number of Multiple infection",
"Number of fungal taxa",
"Number of protozan taxa",
"Number of helminth taxa",
"Number of environment experiments",
"Number of pollution experiments",
"Number of resource experiments",
"Number of resistance effects",
"Number of prevalence effects",
"Number of intensity effects",
"Number of fitness effects",
"Number of survival effects",
"Number of fecundity effects"
),
Question_1 = c(
length(unique(dat_1$Study)),
length(dat_1$g),
length(unique(dat_1$Experiment)),
length(unique(dat_1$Host[which(dat_1$Host.type == "Arthropod")])),
length(unique(dat_1$Host[which(dat_1$Host.type == "Mollusc")])),
length(unique(dat_1$Host[which(dat_1$Host.type == "Fish")])),
length(unique(dat_1$Host[which(dat_1$Host.type == "Amphibian")])),
length(unique(dat_1$Host[which(dat_1$Host.type == "Reptile")])),
length(unique(dat_1$Host[which(dat_1$Host.type == "Bird")])),
length(unique(dat_1$Host[which(dat_1$Host.type == "Mammal")])),
length(unique(dat_1$Parasite[which(dat_1$Parasite.type ==
"Virus")])),
length(unique(dat_1$Parasite[which(dat_1$Parasite.type ==
"Bacteria")])),
length(unique(dat_1$Parasite[which(dat_1$Parasite.type ==
"Multiple")])),
length(unique(dat_1$Parasite[which(dat_1$Parasite.type ==
"Fungus")])),
length(unique(dat_1$Parasite[which(dat_1$Parasite.type ==
"Protozoan")])),
length(unique(dat_1$Parasite[which(dat_1$Parasite.type ==
"Helminth")])),
length(dat_1$Experiment[which(dat_1$Gradient.category ==
"Environment")]),
length(dat_1$Experiment[which(dat_1$Gradient.category ==
"Pollution")]),
length(dat_1$Experiment[which(dat_1$Gradient.category ==
"Resource")]),
length(dat_1$ID[which(dat_1$Trait.category == "Epidemiological")]),
length(dat_1$ID[which(dat_1$Trait.type == "Prevalence")]),
length(dat_1$ID[which(dat_1$Trait.type == "Intensity")]),
length(dat_1$ID[grep("demographic", dat_1$Trait.category)]),
length(dat_1$ID[which(dat_1$Trait.type == "Survivorship")]),
length(dat_1$ID[which(dat_1$Trait.type == "Fecundity")])
),
Question_2 = c(
length(unique(dat_2$Study)),
length(dat_2$g),
length(unique(dat_2$Experiment)),
length(unique(dat_2$Host[which(dat_2$Host.type == "Arthropod")])),
length(unique(dat_2$Host[which(dat_2$Host.type == "Mollusc")])),
length(unique(dat_2$Host[which(dat_2$Host.type == "Fish")])),
length(unique(dat_2$Host[which(dat_2$Host.type == "Amphibian")])),
length(unique(dat_2$Host[which(dat_2$Host.type == "Reptile")])),
length(unique(dat_2$Host[which(dat_2$Host.type == "Bird")])),
length(unique(dat_2$Host[which(dat_2$Host.type == "Mammal")])),
length(unique(dat_2$Parasite[which(dat_2$Parasite.type ==
"Virus")])),
length(unique(dat_2$Parasite[which(dat_2$Parasite.type ==
"Bacteria")])),
length(unique(dat_2$Parasite[which(dat_2$Parasite.type ==
"Multiple")])),
length(unique(dat_2$Parasite[which(dat_2$Parasite.type ==
"Fungus")])),
length(unique(dat_2$Parasite[which(dat_2$Parasite.type ==
"Protozoan")])),
length(unique(dat_2$Parasite[which(dat_2$Parasite.type ==
"Helminth")])),
length(dat_2$Experiment[which(dat_2$Gradient.category ==
"Environment")]),
length(dat_2$Experiment[which(dat_2$Gradient.category ==
"Pollution")]),
length(dat_2$Experiment[which(dat_2$Gradient.category ==
"Resource")]),
length(dat_2$ID[which(dat_2$Trait.category == "Epidemiological")]),
length(dat_2$ID[which(dat_2$Trait.type == "Prevalence")]),
length(dat_2$ID[which(dat_2$Trait.type == "Intensity")]),
length(dat_2$ID[grep("demographic", dat_2$Trait.category)]),
length(dat_2$ID[which(dat_2$Trait.type == "Survivorship")]),
length(dat_2$ID[which(dat_2$Trait.type == "Fecundity")])
),
Question_3 = c(
length(unique(dat_3$Study)),
length(dat_3$g),
length(unique(dat_3$Experiment)),
length(unique(dat_3$Host[which(dat_3$Host.type == "Arthropod")])),
length(unique(dat_3$Host[which(dat_3$Host.type == "Mollusc")])),
length(unique(dat_3$Host[which(dat_3$Host.type == "Fish")])),
length(unique(dat_3$Host[which(dat_3$Host.type == "Amphibian")])),
length(unique(dat_3$Host[which(dat_3$Host.type == "Reptile")])),
length(unique(dat_3$Host[which(dat_3$Host.type == "Bird")])),
length(unique(dat_3$Host[which(dat_3$Host.type == "Mammal")])),
length(unique(dat_3$Parasite[which(dat_3$Parasite.type ==
"Virus")])),
length(unique(dat_3$Parasite[which(dat_3$Parasite.type ==
"Bacteria")])),
length(unique(dat_3$Parasite[which(dat_3$Parasite.type ==
"Multiple")])),
length(unique(dat_3$Parasite[which(dat_3$Parasite.type ==
"Fungus")])),
length(unique(dat_3$Parasite[which(dat_3$Parasite.type ==
"Protozoan")])),
length(unique(dat_3$Parasite[which(dat_3$Parasite.type ==
"Helminth")])),
length(dat_3$Experiment[which(dat_3$Gradient.category ==
"Environment")]),
length(dat_3$Experiment[which(dat_3$Gradient.category ==
"Pollution")]),
length(dat_3$Experiment[which(dat_3$Gradient.category ==
"Resource")]),
length(dat_3$ID[which(dat_3$Trait.category == "Epidemiological")]),
length(dat_3$ID[which(dat_3$Trait.type == "Prevalence")]),
length(dat_3$ID[which(dat_3$Trait.type == "Intensity")]),
length(dat_3$ID[grep("demographic", dat_3$Trait.category)]),
length(dat_3$ID[which(dat_3$Trait.type == "Survivorship")]),
length(dat_3$ID[which(dat_3$Trait.type == "Fecundity")])
)
)
d_stats %>%
kbl() %>%
kable_material(c("striped", "hover"), full_width = F)
full_model <- rma.mv(
g,
V = varcovmat_3_PD$mat,
mods = ~ Trait.type*Gradient.category,
random = list( ~ 1 | ID, ~ 1 | Experiment, ~ 1 | Parasite),
data = dat_3,
method = "ML"
)
# Define if using Trait.type or Trait.category
model_selection <- dredge(full_model, trace = 2)
# First, we evaluate some code that generates helper functions needed so that metafor and MuMIn could interact as necessary
eval(metafor:::.MuMIn)
full_model <- rma.mv(
g,
V = varcovmat_3_PD$mat,
mods = ~ Trait.type*Gradient.category,
random = list( ~ 1 | ID, ~ 1 | Experiment, ~ 1 | Parasite),
data = dat_3,
method = "ML"
)
# Define if using Trait.type or Trait.category
model_selection <- dredge(full_model, trace = 2)
model_selection
full_model <- rma.mv(
g,
V = varcovmat_3_PD$mat,
mods = ~ Trait.category*Gradient.category,
random = list( ~ 1 | ID, ~ 1 | Experiment, ~ 1 | Parasite),
data = dat_3,
method = "ML"
)
model_selection
# Define if using Trait.type or Trait.category
model_selection <- dredge(full_model, trace = 2)
model_selection
forest.default(x= Q2m5$beta, sei =  Q2m5$se, ci.lb =  Q2m5$ci.lb, ci.ub =  Q2m5$ci.ub,
annotate=TRUE, showweights=T, header=F,
slab = c("Environment", "Pollution", "Resource"))
Q2m5 <-
rma.mv(
g ~ Gradient.category -1,
V = varcovmat_2_PD$mat,
random = list( ~ 1 | ID, ~ 1 | Experiment, ~ 1 | Parasite),
data = dat_2,
method = "REML"
)
summary(Q2m5)
forest.default(x= Q2m5$beta, sei =  Q2m5$se, ci.lb =  Q2m5$ci.lb, ci.ub =  Q2m5$ci.ub,
annotate=TRUE, showweights=T, header=F,
slab = c("Environment", "Pollution", "Resource"))
forest.default(x= Q2m5$beta, sei =  Q2m5$se, ci.lb =  Q2m5$ci.lb, ci.ub =  Q2m5$ci.ub,
annotate=TRUE, showweights=T, header=F,
slab = c("Environment", "Pollution", "Resource"))
